% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/API.R
\name{prov.source}
\alias{prov.source}
\title{prov.source}
\usage{
prov.source(file, local = FALSE, echo = verbose, print.eval = echo,
  verbose = getOption("verbose"), max.deparse.length = 150, chdir = FALSE,
  encoding = getOption("encoding"), ignore.ddg.calls = TRUE,
  calling.script = NA, startLine = NA, startCol = NA, endLine = NA,
  endCol = NA)
}
\arguments{
\item{file}{the name of the R script file to source.}

\item{local}{the environment in which to evaluate parsed
expressions. If TRUE, the environment from which prov.source is
called. If FALSE, the user's workspace (global environment).}

\item{echo}{print each expression after parsing}

\item{print.eval}{print the result of each evaluation}

\item{verbose}{print extra diagnostics}

\item{max.deparse.length}{the maximum number of characters in output
for deparse of a single expression}

\item{chdir}{change the R working directory temporarily to
the directory containing the file to be sourced}

\item{encoding}{encoding to be assumed when file is a
character string}

\item{ignore.ddg.calls}{if TRUE, ignore DDG function calls}

\item{calling.script}{the number of the calling script}

\item{startLine}{the line that the source call starts on}

\item{startCol}{the column that the source call starts on}

\item{endLine}{the line that the source call ends on}

\item{endCol}{the column that the source call ends on}
}
\value{
nothing
}
\description{
prov.source reads and executes an R script in the specified
environment. prov.source mimics the behaviour of the R source command, 
with similar input parameters and results, but with the additional 
parameter ignore.ddg.calls.
}
